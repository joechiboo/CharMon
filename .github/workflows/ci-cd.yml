name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # ========================================
  # 單元測試
  # ========================================
  unit-tests:
    name: 🔬 單元測試
    runs-on: ubuntu-latest

    steps:
      - name: 📥 檢出代碼
        uses: actions/checkout@v4

      - name: 📦 設置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: charmon-app/package-lock.json

      - name: 📋 安裝前端依賴
        run: |
          cd charmon-app
          rm -rf node_modules package-lock.json
          npm install

      - name: 🔧 類型檢查
        run: |
          cd charmon-app
          npm run type-check

      - name: 🧹 程式碼檢查
        run: |
          cd charmon-app
          npm run lint

      - name: 🧪 執行單元測試
        run: |
          cd charmon-app
          npm run test:unit

  # ========================================
  # 後端測試
  # ========================================
  backend-tests:
    name: 🚀 後端測試
    runs-on: ubuntu-latest

    steps:
      - name: 📥 檢出代碼
        uses: actions/checkout@v4

      - name: 📦 設置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: charmon-backend/package-lock.json

      - name: 🔧 安裝後端依賴
        run: |
          cd charmon-backend
          npm install

      - name: 🏗️ 建構後端
        run: |
          cd charmon-backend
          npm run build

      - name: 🧪 執行後端測試
        run: |
          cd charmon-backend
          npm test

  # ========================================
  # E2E 測試 (暫時關閉)
  # ========================================
  # e2e-tests:
  #   name: 🎭 E2E 測試
  #   runs-on: ubuntu-latest
  #   needs: [unit-tests, backend-tests]
  #
  #   steps:
  #     - name: 📥 檢出代碼
  #       uses: actions/checkout@v4
  #
  #     - name: 📦 設置 Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'
  #         cache: 'npm'
  #         cache-dependency-path: charmon-app/package-lock.json
  #
  #     - name: 📋 安裝前端依賴
  #       run: |
  #         cd charmon-app
  #         rm -rf node_modules package-lock.json
  #         npm install
  #
  #     - name: 🔧 安裝後端依賴
  #       run: |
  #         cd charmon-backend
  #         npm install
  #
  #     - name: 🏗️ 建構後端
  #       run: |
  #         cd charmon-backend
  #         npm run build
  #
  #     - name: 🎭 安裝 Playwright
  #       run: |
  #         cd charmon-app
  #         npx playwright install --with-deps
  #
  #     - name: 🚀 啟動後端服務
  #       run: |
  #         cd charmon-backend
  #         npm start &
  #         sleep 10
  #       env:
  #         NODE_ENV: test
  #
  #     - name: 🧪 執行 E2E 測試
  #       run: |
  #         cd charmon-app
  #         npm run test:e2e
  #       env:
  #         VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
  #         VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
  #
  #     - name: 📊 上傳測試報告
  #       uses: actions/upload-artifact@v4
  #       if: always()
  #       with:
  #         name: playwright-report
  #         path: charmon-app/playwright-report/
  #         retention-days: 30

  # ========================================
  # 部署到 GitHub Pages
  # ========================================
  deploy:
    name: 🚀 部署到 GitHub Pages
    runs-on: ubuntu-latest
    needs: [unit-tests, backend-tests]  # 暫時移除 e2e-tests 依賴
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: 📥 檢出代碼
        uses: actions/checkout@v4

      - name: 📦 設置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: charmon-app/package-lock.json

      - name: 📋 安裝依賴
        run: |
          cd charmon-app
          rm -rf node_modules package-lock.json
          npm install

      - name: 🏗️ 建構應用
        run: |
          cd charmon-app
          npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

      - name: 📄 設置 Pages
        uses: actions/configure-pages@v4

      - name: 📤 上傳構建產物
        uses: actions/upload-pages-artifact@v3
        with:
          path: charmon-app/dist

      - name: 🚀 部署到 GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4